<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:background="@color/off"
    android:orientation="vertical"
    android:padding="16dp">

    <View
        android:layout_width="40dp"
        android:layout_height="4dp"
        android:layout_gravity="center"
        android:layout_marginBottom="16dp"
        android:background="@color/brown" />

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        android:gravity="center_vertical"
        android:orientation="horizontal">

        <ImageView
            android:id="@+id/fruit_icon"
            android:layout_width="100dp"
            android:layout_height="100dp"
            android:layout_marginEnd="16dp"
            android:src="@drawable/ic_tech" />

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Informações Técnicas"
            android:textColor="@color/brown"
            android:textSize="20sp"
            android:textStyle="bold" />
    </LinearLayout>

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="wrap_content">

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:paddingTop="8dp"
            android:textColor="@color/brown"
            android:text="O BuscaFruta é um aplicativo robusto que utiliza tecnologias modernas para oferecer uma experiência de usuário fluida e informativa. Ele integra o Google Maps para exibir locais de árvores frutíferas, utilizando geofencing para notificações inteligentes, que alertam os usuários quando estão próximos de uma árvore de frutas.\n\nFuncionalidades principais:\n\n• **Mapa interativo**: Visualização clara e precisa das árvores frutíferas, filtrando-as por tipo de fruta, com a possibilidade de explorar cada árvore individualmente.\n• **Filtragem inteligente**: O usuário pode filtrar árvores por nome ou estação, e o mapa se ajusta dinamicamente.\n• **Notificações via geofencing**: Quando o usuário se aproxima de uma árvore frutífera (dentro de um raio de 1km), uma notificação é disparada automaticamente.\n• **Otimização para smartwatch**: O aplicativo também está disponível para dispositivos vestíveis, permitindo uma experiência contínua sem a necessidade de ter o celular nas mãos.\n\nArquitetura e tecnologia:\n\n• **Clean Architecture**: Seguindo os princípios da Clean Architecture, o app separa bem as camadas de apresentação, domínio e dados, facilitando sua escalabilidade e manutenção.\n• **MVVM (Model-View-ViewModel)**: O padrão MVVM permite uma separação clara entre a lógica de negócios e a interface do usuário, mantendo a integridade do fluxo de dados.\n• **Coroutines e Flow**: O app usa Coroutines para processamento assíncrono, e Flow para manipulação reativa de dados, garantindo eficiência e alta responsividade.\n• **StateFlow e ViewModel**: A lógica de exibição é baseada em StateFlow, o que assegura que a UI esteja sempre sincronizada com o estado atual do app, mesmo com mudanças de configuração.\n\nTestes e práticas de desenvolvimento:\n\n• **Testes unitários**: O app é testado com JUnit e kotlinx.coroutines, assegurando que as funcionalidades centrais (como filtragem de frutas e notificações) estejam funcionando corretamente.\n• **Princípios de Clean Code**: Nomes de variáveis e métodos são descritivos, seguindo padrões de legibilidade e manutenibilidade. O código é dividido em funções pequenas e coesas, facilitando sua expansão e entendimento.\n\nConclusão:\n\nO BuscaFruta é um exemplo de excelência em desenvolvimento de aplicativos, combinando funcionalidades ricas com uma arquitetura sólida. Ele oferece uma experiência inovadora para os usuários, ao mesmo tempo em que mantém uma base técnica robusta para fácil manutenção e expansão futura." />
    </ScrollView>
</LinearLayout>
